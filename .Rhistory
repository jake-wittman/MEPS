# Make segment empty if no joinpoint
mutate(segment = case_when(segment_end_0 == 2020 ~ NA_integer_,
TRUE ~ segment_end_0)) %>%
# MAke apc empty if not significant
mutate(across(c(apc_0, apc_95_lcl_0, apc_95_ucl_0),
~ case_when(p_value_0 > 0.05 & p_value_1 > 0.05 ~ NA_real_,
TRUE ~ .x)),
across(c(apc_1, apc_95_lcl_1, apc_95_ucl_1),
~ case_when(p_value_0 > 0.05 & p_value_1 > 0.05 ~ NA_real_,
TRUE ~ .x)),
across(starts_with('apc_0') | starts_with('apc_1') | starts_with('p_'),
~specifyDecimal(.x, digits = 1)),
across(contains('cl'),
~specifyDecimal(.x, digits = 2)),
across(starts_with('apc') | starts_with('p_'),
~case_when(.x == ' NA' ~ NA_character_,
TRUE ~ .x))) %>%
# Concatenate apc column with CI columns
mutate(`APC Period 1` = case_when(
!is.na(apc_0) ~ glue::glue('{apc_0} ({apc_95_lcl_0}, {apc_95_ucl_0})'),
TRUE ~ NA_character_
),
`APC Period 2` = case_when(
!is.na(apc_1) ~ glue::glue('{apc_1} ({apc_95_lcl_1}, {apc_95_ucl_1})'),
TRUE ~ NA_character_
)
) %>%
select(stratifier, strata, segment, starts_with('APC '))
# Clean up the age adjusted preventive practices and then join with the aapc table
clean_age_adjusted <- age_adjusted_preventive %>%
# Filter to just the >=3 practices
filter(label == 'At least three preventive practices followed') %>%
# Filter down to every other year
filter(year %in% seq(2000, 2020, by = 2)) %>%
mutate(chr_age_adj_prop = sigfig(p, digits = 3),
p.std.error = p.std.error * 100,
age_adjusted_se_perc = sigfig(p.std.error, digits = 3),
percentage = glue::glue('{chr_age_adj_prop} ({age_adjusted_se_perc})')) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = c(p, percentage, p.std.error),
) %>%
# Remove excess strata
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
# Relevel stratifier factor, clean up stratifier and strata names
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata),
percent_change = ((p_2020 - p_2008) / p_2008) * 100,
percent_change_se = (abs(p_2020 / p_2008) * sqrt((p.std.error_2020^2 / p_2020^2) + (p.std.error_2008^2 / p_2008^2)) * 100),
perc_change_lcl = percent_change - 1.96 * percent_change_se,
perc_change_ucl = percent_change + 1.96 * percent_change_se,
perc_change_char = specifyDecimal(percent_change, digits = 1),
perc_change_lcl_char = specifyDecimal(perc_change_lcl, digits = 2),
perc_change_ucl_char = specifyDecimal(perc_change_ucl, digits = 2),
`Percent Change (95% CI)` = glue::glue('{perc_change_char} ({perc_change_lcl_char}, {perc_change_ucl_char})')) %>%
select(-starts_with('age_adjusted_prop'), -starts_with('p.std.error'), -contains('_change_')) %>%
setNames(., str_replace(names(.), 'percentage_', "")) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
# Join with AAPC table
left_join(cleaned_jp_aapc, by = c('stratifier', 'strata'))
cleaned_preventive_df <- left_join(clean_age_adjusted, cleaned_jp_apc, by = c('stratifier', 'strata')) %>%
mutate(AAPC = case_when(is.na(AAPC) & is.na(`APC Period 2`) ~ `APC Period 1`,
TRUE ~ AAPC),
`APC Period 1` = case_when(is.na(`APC Period 1`) & is.na(`APC Period 2`) ~ AAPC,
TRUE ~ `APC Period 1`)) %>%
# Rename poverty levels
mutate(strata = case_when(as.character(strata) == 'Poor/Negative' ~ '< 100%',
as.character(strata) == 'Low income' ~ '100% - 199%',
as.character(strata) == 'Middle income' ~ '200% - 399%',
as.character(strata) == 'High income' ~ '> 400%',
TRUE ~ as.character(strata)))
# Rename strata to a blank name to remove it from the final table
preventive_practice_table <- cleaned_preventive_df %>%
group_by(stratifier) %>%
select(stratifier, ` ` = strata, `2008`:`2020`, `Percent Change`, `Joinpoint Year` = segment,
`APC Period 1`, `APC Period 2`, `AAPC`) %>%
mutate(stratifier = case_when(as.character(stratifier) == 'Poverty level' ~ 'Poverty income ratio',
TRUE ~ as.character(stratifier))) %>%
# Rename some columns to add () info
rename(`2008 (SE)` = `2008`,
`2010 (SE)` = `2010`,
`2012 (SE)` = `2012`,
`2014 (SE)` = `2014`,
`2016 (SE)` = `2016`,
`2018 (SE)` = `2018`,
`2020 (SE)` = `2020`,
`APC Period 1 (95% CI)` = `APC Period 1`,
`APC Period 2 (95% CI)` = `APC Period 2`,
`AAPC (95% CI)` = `AAPC`) %>%
gt() %>%
sub_missing(missing_text = ' ')
tar_load(age_adjusted_preventive)
age_adjusted_preventive %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata))
age_adjusted_preventive %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007)
source("C:/R_Rstudio/Projects/MEPS/scripts/functions.R")
job::job({targets::tar_make_future(workers = 2)})
tar_load(c(jp_prevention_apc,
jp_prevention_aapc,
age_adjusted_preventive,
jp_proportion_plot_data,
age_adjusted_stats
),
store = here::here('_targets/'))
# Clean up the AAPC table and get it into format for printing to table
cleaned_jp_aapc <- jp_prevention_aapc %>%
select(-aapc_index) %>%
mutate(aapc = specifyDecimal(aapc, digits = 1),
across(starts_with('aapc_'),
~specifyDecimal(x = .x, digits = 2)),
across(starts_with('aapc'),
~case_when(.x == ' NA' ~ NA_character_,
TRUE ~ .x)),
AAPC = case_when(!is.na(aapc) ~ glue::glue('{aapc} ({aapc_c_i_low}, {aapc_c_i_high})'),
TRUE ~ NA_character_)) %>%
select(stratifier, strata, AAPC)
# Format APC table for future joining
cleaned_jp_apc <- jp_prevention_apc %>%
# No model has more than a single joinpoint, so make wider and then
# remove the excess columns to determine if there's no join point (segmend_end = 2020)
# or a joinpoint (segment_end != 2020)
pivot_wider(id_cols = c(stratifier, strata, model),
names_from = segment,
values_from = c(segment_start, segment_end, apc, p_value, apc_significant,
apc_95_lcl, apc_95_ucl)
) %>%
select(-segment_start_0, -segment_start_1, -segment_end_1, -apc_significant_0, -apc_significant_1) %>%
# Make segment empty if no joinpoint
mutate(segment = case_when(segment_end_0 == 2020 ~ NA_integer_,
TRUE ~ segment_end_0)) %>%
# MAke apc empty if not significant
mutate(across(c(apc_0, apc_95_lcl_0, apc_95_ucl_0),
~ case_when(p_value_0 > 0.05 & p_value_1 > 0.05 ~ NA_real_,
TRUE ~ .x)),
across(c(apc_1, apc_95_lcl_1, apc_95_ucl_1),
~ case_when(p_value_0 > 0.05 & p_value_1 > 0.05 ~ NA_real_,
TRUE ~ .x)),
across(starts_with('apc_0') | starts_with('apc_1') | starts_with('p_'),
~specifyDecimal(.x, digits = 1)),
across(contains('cl'),
~specifyDecimal(.x, digits = 2)),
across(starts_with('apc') | starts_with('p_'),
~case_when(.x == ' NA' ~ NA_character_,
TRUE ~ .x))) %>%
# Concatenate apc column with CI columns
mutate(`APC Period 1` = case_when(
!is.na(apc_0) ~ glue::glue('{apc_0} ({apc_95_lcl_0}, {apc_95_ucl_0})'),
TRUE ~ NA_character_
),
`APC Period 2` = case_when(
!is.na(apc_1) ~ glue::glue('{apc_1} ({apc_95_lcl_1}, {apc_95_ucl_1})'),
TRUE ~ NA_character_
)
) %>%
select(stratifier, strata, segment, starts_with('APC '))
# Clean up the age adjusted preventive practices and then join with the aapc table
clean_age_adjusted <- age_adjusted_preventive %>%
# Filter to just the >=3 practices
filter(label == 'At least three preventive practices followed') %>%
# Filter down to every other year
filter(year %in% seq(2000, 2020, by = 2)) %>%
mutate(chr_age_adj_prop = sigfig(p, digits = 3),
p.std.error = p.std.error * 100,
age_adjusted_se_perc = sigfig(p.std.error, digits = 3),
percentage = glue::glue('{chr_age_adj_prop} ({age_adjusted_se_perc})')) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = c(p, percentage, p.std.error),
) %>%
# Remove excess strata
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
# Relevel stratifier factor, clean up stratifier and strata names
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata),
percent_change = ((p_2020 - p_2008) / p_2008) * 100,
percent_change_se = (abs(p_2020 / p_2008) * sqrt((p.std.error_2020^2 / p_2020^2) + (p.std.error_2008^2 / p_2008^2)) * 100),
perc_change_lcl = percent_change - 1.96 * percent_change_se,
perc_change_ucl = percent_change + 1.96 * percent_change_se,
perc_change_char = specifyDecimal(percent_change, digits = 1),
perc_change_lcl_char = specifyDecimal(perc_change_lcl, digits = 2),
perc_change_ucl_char = specifyDecimal(perc_change_ucl, digits = 2),
`Percent Change (95% CI)` = glue::glue('{perc_change_char} ({perc_change_lcl_char}, {perc_change_ucl_char})')) %>%
select(-starts_with('age_adjusted_prop'), -starts_with('p.std.error'), -contains('_change_')) %>%
setNames(., str_replace(names(.), 'percentage_', "")) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
# Join with AAPC table
left_join(cleaned_jp_aapc, by = c('stratifier', 'strata'))
cleaned_preventive_df <- left_join(clean_age_adjusted, cleaned_jp_apc, by = c('stratifier', 'strata')) %>%
mutate(AAPC = case_when(is.na(AAPC) & is.na(`APC Period 2`) ~ `APC Period 1`,
TRUE ~ AAPC),
`APC Period 1` = case_when(is.na(`APC Period 1`) & is.na(`APC Period 2`) ~ AAPC,
TRUE ~ `APC Period 1`)) %>%
# Rename poverty levels
mutate(strata = case_when(as.character(strata) == 'Poor/Negative' ~ '< 100%',
as.character(strata) == 'Low income' ~ '100% - 199%',
as.character(strata) == 'Middle income' ~ '200% - 399%',
as.character(strata) == 'High income' ~ '> 400%',
TRUE ~ as.character(strata)))
# Rename strata to a blank name to remove it from the final table
preventive_practice_table <- cleaned_preventive_df %>%
group_by(stratifier) %>%
select(stratifier, ` ` = strata, `2008`:`2020`, `Percent Change`, `Joinpoint Year` = segment,
`APC Period 1`, `APC Period 2`, `AAPC`) %>%
mutate(stratifier = case_when(as.character(stratifier) == 'Poverty level' ~ 'Poverty income ratio',
TRUE ~ as.character(stratifier))) %>%
# Rename some columns to add () info
rename(`2008 (SE)` = `2008`,
`2010 (SE)` = `2010`,
`2012 (SE)` = `2012`,
`2014 (SE)` = `2014`,
`2016 (SE)` = `2016`,
`2018 (SE)` = `2018`,
`2020 (SE)` = `2020`,
`APC Period 1 (95% CI)` = `APC Period 1`,
`APC Period 2 (95% CI)` = `APC Period 2`,
`AAPC (95% CI)` = `AAPC`) %>%
gt() %>%
sub_missing(missing_text = ' ')
# Rename strata to a blank name to remove it from the final table
preventive_practice_table <- cleaned_preventive_df %>%
group_by(stratifier) %>%
select(stratifier, ` ` = strata, `2008`:`2020`, `Percent Change (95% CI)`, `Joinpoint Year` = segment,
`APC Period 1`, `APC Period 2`, `AAPC`) %>%
mutate(stratifier = case_when(as.character(stratifier) == 'Poverty level' ~ 'Poverty income ratio',
TRUE ~ as.character(stratifier))) %>%
# Rename some columns to add () info
rename(`2008 (SE)` = `2008`,
`2010 (SE)` = `2010`,
`2012 (SE)` = `2012`,
`2014 (SE)` = `2014`,
`2016 (SE)` = `2016`,
`2018 (SE)` = `2018`,
`2020 (SE)` = `2020`,
`APC Period 1 (95% CI)` = `APC Period 1`,
`APC Period 2 (95% CI)` = `APC Period 2`,
`AAPC (95% CI)` = `AAPC`) %>%
gt() %>%
sub_missing(missing_text = ' ')
preventive_practice_table$`_data` <- preventive_practice_table$`_data`[c(1:18, 20, 19, 21), ]
job::job({targets::tar_make_future(workers = 2)})
tar_load(jp_regressions_proportions)
jp_regressions_proportions[[1]]$data_export
jp_regressions_proportions[[2]]$data_export
age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007) %>%
split(., f = ~.$stratifier + .$variable)
jp_regressions_proportions[[2]]$data_export -> v
v[[2]]
age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007) %>%
split(., f = ~.$stratifier + .$variable) -> v
v[[2]]
joinPointRegression(v[[2]])
library(nih.joinpoint)
joinPointRegression(v[[2]])
joinPointRegression(v[[2]]) -> b
b$data_export
map(jp_regressions_proportions, ~.x$data_export %>%
mutate(apc = as.character(apc))) %>%
map2(., names(.), ~.x %>%
mutate(stratifier.practice = .y)) %>%
bind_rows() %>%
separate(stratifier.practice, c('stratifier', 'variable'), sep = '[.]') %>%
ungroup()
map(jp_regressions_proportions, ~.x$data_export %>%
mutate(apc = as.character(apc))) %>%
map2(., names(.), ~.x %>%
mutate(stratifier.practice = .y))
map(jp_regressions_proportions, ~.x$data_export)
b$data_export
jp_regressions_proportions[[2]]$data_export
tar_delete(jp_regressions_proportions)
tar_make(jp_regressions_proportions)
tar_load(jp_regressions_proportions)
jp_regressions_proportions[[2]]$data_export
v
age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007) %>%
split(., f = ~.$stratifier + .$variable) %>%
map(., ~joinPointRegression(.x)) -> v
v[[2]]
v[[2]]$data_export
map(v, ~.x$data_export %>%
mutate(apc = as.character(apc)))
map(v, ~.x$data_export %>%
mutate(apc = as.character(apc))) %>%
map2(., names(.), ~.x %>%
mutate(stratifier.practice = .y))
map(v, ~.x$data_export %>%
mutate(apc = as.character(apc))) %>%
map2(., names(.), ~.x %>%
mutate(stratifier.practice = .y)) %>%
bind_rows()
tar_delete(jp_regressions_proportions)
?tar_target
tar_make(jp_regressions_proportions)
tar_load(jp_regressions_proportions)
jp_r\
jp_regressions_proportions[[2]]$data_export
warnings()
age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007) -> test_dat
View(test_dat)
unique(test_dat$strata)
unique(test_dat$variable)
unique(test_dat$stratifier)
age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007) %>%
split(., f = ~.$stratifier + .$variable) %>%
map(., ~joinPointRegression(.x)) -> test_list
test_list
map(test_list, ~.x$data_export) %>% bind_rows()
map(test_list, ~.x$data_export)
tar_delete(jp_regressions_proportions)
tar_make(jp_regressions_proportions)
tar_load(jp_regressions_proportions)
warnings()
jp_regressions_proportions %>% map(~.x$data_export)
tar_delete(jp_regressions_proportions)
library(targets)
tar_delete(jp_regressions_proportions)
tar_make(jp_regressions_proportions)
tar_load(jp_regressions_proportions)
jp_regressions_proportions
source("C:/R_Rstudio/Projects/MEPS/scripts/functions.R")
tar_make(jp_regressions_proportions)
source("C:/R_Rstudio/Projects/MEPS/scripts/functions.R")
tar_make()
tar_delete(jp_regressions_proportions)
tar_make()
tar_delete(jp_regressions_proportions)
library(targets)
tar_make(callr_function = NULL)
age_adjusted_stats %>% filter(strata != "Total") %>% filter(strata !=
"Not available") %>% filter(strata != "Other Race/Not Hispanic") %>%
mutate(variable_text = case_when(variable == "a1c" ~ "2 or more A1C tests",
variable == "CHOL_all" ~ "Cholesterol tested", variable ==
"DENT_all" ~ "1 or more dentist visits", variable ==
"eye-exam" ~ "Eye exam with dilation", variable ==
"flu" ~ "Received flu vaccine", variable == "foot" ~
"Foot examination"), strata = case_when(strata ==
"stat_0" ~ "Overall", TRUE ~ strata)) %>% mutate(strata = as.factor(strata),
year_adj = year - 2007) %>% split(., f = ~.$stratifier +
.$variable) %>% map(., ~joinPointRegression(.x))
v <- age_adjusted_stats %>% filter(strata != "Total") %>% filter(strata !=
"Not available") %>% filter(strata != "Other Race/Not Hispanic") %>%
mutate(variable_text = case_when(variable == "a1c" ~ "2 or more A1C tests",
variable == "CHOL_all" ~ "Cholesterol tested", variable ==
"DENT_all" ~ "1 or more dentist visits", variable ==
"eye-exam" ~ "Eye exam with dilation", variable ==
"flu" ~ "Received flu vaccine", variable == "foot" ~
"Foot examination"), strata = case_when(strata ==
"stat_0" ~ "Overall", TRUE ~ strata)) %>% mutate(strata = as.factor(strata),
year_adj = year - 2007) %>% split(., f = ~.$stratifier +
.$variable) %>% map(., ~joinPointRegression(.x))
map(v, ~.x$data_export)
age_adjusted_stats
v <- age_adjusted_stats %>% filter(strata != "Total") %>% filter(strata !=
"Not available") %>% filter(strata != "Other Race/Not Hispanic") %>%
mutate(variable_text = case_when(variable == "a1c" ~ "2 or more A1C tests",
variable == "CHOL_all" ~ "Cholesterol tested", variable ==
"DENT_all" ~ "1 or more dentist visits", variable ==
"eye-exam" ~ "Eye exam with dilation", variable ==
"flu" ~ "Received flu vaccine", variable == "foot" ~
"Foot examination"), strata = case_when(strata ==
"stat_0" ~ "Overall", TRUE ~ strata)) %>% mutate(strata = as.factor(strata),
year_adj = year - 2007) %>% split(., f = ~.$stratifier +
.$variable) -> test_df
test_df
tar_load(age_adjusted_stats)
age_adjusted_stats
tar_delete(age_adjusted_stats)
tar_make(age_adjusted_stats)
age_adjusted_stats
tar_load(ends_with('all_stats'))
tar_load(ends_with('joined'))
ins_stats_joined
tar_make(age_adjusted_stats)
tar_make(age_adjusted_stats)
tar_load(age_adjusted_stats)
age_adusted_stats
age_adjusted_stats
age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
year_adj = year - 2007) %>%
split(., f = ~.$stratifier + .$variable) %>%
map(., ~joinPointRegression(.x)) %>% map(~.x$data_export)
tar_make(jp_proportion_plot_data)
tar_load(jp_proportion_plot_data)
jp_proportion_plot_data
