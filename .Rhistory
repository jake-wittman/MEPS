c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata),
percent_change = ((p_2019 - p_2008) / p_2008) * 100,
percent_change_se = (abs(p_2019 / p_2008) * sqrt((p.std.error_2019^2 / p_2019^2) + (p.std.error_2008^2 / p_2008^2)) * 100),
perc_change_lcl = percent_change - 1.96 * percent_change_se,
perc_change_ucl = percent_change + 1.96 * percent_change_se,
perc_change_char = specifyDecimal(percent_change, digits = 1),
perc_change_lcl_char = specifyDecimal(perc_change_lcl, digits = 1),
perc_change_ucl_char = specifyDecimal(perc_change_ucl, digits = 1),
`Percent Change (95% CI)` = glue::glue('{perc_change_char} ({perc_change_lcl_char}, {perc_change_ucl_char})')) %>%
select(-starts_with('age_adjusted_prop'), -starts_with('p.std.error'), -contains('_change_')) %>%
setNames(., str_replace(names(.), 'percentage_', "")) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
# Join with AAPC table
left_join(cleaned_prop_aapc_sans_2020, by = c('stratifier', 'strata', 'variable' = 'practice'))
cleaned_proportion_df_sans_2020 <- left_join(clean_age_adjusted_prop, cleaned_prop_apc_sans_2020, by = c('stratifier', 'strata', 'variable' = 'practice')) %>%
mutate(AAPC = case_when(is.na(AAPC) & is.na(`APC Period 2`) & is.na(`APC Period 3`) ~ `APC Period 1`,
TRUE ~ AAPC),
`APC Period 1` = case_when(is.na(`APC Period 1`) & is.na(`APC Period 2`) ~ AAPC,
TRUE ~ `APC Period 1`)) %>%
# Rename poverty levels
mutate(strata = case_when(as.character(strata) == 'Poor/Negative' ~ '< 100%',
as.character(strata) == 'Low income' ~ '100% - 199%',
as.character(strata) == 'Middle income' ~ '200% - 399%',
as.character(strata) == 'High income' ~ '> 400%',
TRUE ~ as.character(strata)))
# Rename strata to a blank name to remove it from the final table
proportion_table_sans_2020 <- cleaned_proportion_df_sans_2020 %>%
filter(strata != 'Other') %>%
group_by(stratifier) %>%
mutate(variable = case_when(variable == 'a1c' ~ 'Two or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ 'One or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination')) %>%
select(stratifier,
` ` = strata,
`Preventive Practice` = variable, `2008`:`2020`, `Percent Change (95% CI)`, `Joinpoint Year` = segment,
`APC Period 1`, `APC Period 2`, `APC Period 3`, `AAPC`) %>%
mutate(stratifier = case_when(as.character(stratifier) == 'Poverty level' ~ 'Poverty income ratio',
TRUE ~ as.character(stratifier))) %>%
# Rename some columns to add () info
rename(`2008 (SE)` = `2008`,
`2009 (SE)` = `2009`,
`2010 (SE)` = `2010`,
`2011 (SE)` = `2011`,
`2012 (SE)` = `2012`,
`2013 (SE)` = `2013`,
`2014 (SE)` = `2014`,
`2015 (SE)` = `2015`,
`2016 (SE)` = `2016`,
`2017 (SE)` = `2017`,
`2018 (SE)` = `2018`,
`2019 (SE)` = `2019`,
`2020 (SE)` = `2020`,
`APC Period 1 (95% CI)` = `APC Period 1`,
`APC Period 2 (95% CI)` = `APC Period 2`,
`APC Period 3 (95% CI)` = `APC Period 3`,
`AAPC (95% CI)` = `AAPC`) %>%
gt() %>%
sub_missing(missing_text = ' ') %>%
tab_footnote(
footnote = "Values in these columns were estimated excluding data from 2020.",
locations = cells_column_labels(
columns = c(`Percent Change (95% CI)`,
`APC Period 1 (95% CI)`,
`APC Period 2 (95% CI)`,
`APC Period 3 (95% CI)`,
`AAPC (95% CI)`
))
) %>%
tab_options(footnotes.marks = "a")
# Reorganize insurance variables
proportion_table_sans_2020$`_data` <- proportion_table_sans_2020$`_data`[c(1:84,
85, 88, 86, 87,
89, 92, 90, 91,
93, 96, 94, 95,
97, 100, 98, 99,
101, 104, 102, 103,
105, 108, 106, 107,
109:nrow(proportion_table_sans_2020$`_data`)), ]
prop_tab_sans_2020 <- proportion_table_sans_2020$`_data`
proportion_table_sans_2020 %>%
gtsave('proportion_2020.docx')
?scale_color_manual
test_plots_sans_2020[[3]] <-
test_plots_sans_2020[[3]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Insurance',
values = c(
'Medicaidᶜ' = color_pal[1],
'Medicare onlyᵃ' = color_pal[2],
'Private onlyᵃᶜ' = color_pal[3],
'Uninsuredᵃᶜ' = color_pal[4],
'Overallᵃᶜ' = '#000000'
),
labels = c(
'Medicaidᶜ',
'Medicare onlyᵃ',
'Private onlyᵃᶜ',
'Uninsuredᵃᶜ',
'Overallᵃᶜ'
)
) +
scale_linetype_manual(
name = 'Insurance',
labels = c(
'Medicaidᶜ',
'Medicare onlyᵃ',
'Private onlyᵃᶜ',
'Uninsuredᵃᶜ',
'Overallᵃᶜ'
),
values = c(
'Medicaidᶜ' = 'solid',
'Medicare onlyᵃ' = 'solid',
'Private onlyᵃᶜ' = 'solid',
'Uninsuredᵃᶜ' = 'solid',
'Overallᵃᶜ' = 'dashed'
)
)
test_plots_sans_2020[[3]]
stats_table_plot_dat_sans_2020$insurance
test_plots_sans_2020[[3]] <-
test_plots_sans_2020[[3]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Insurance',
values = c(
'Medicaid' = color_pal[1],
'Medicare only' = color_pal[2],
'Private only' = color_pal[3],
'Uninsured' = color_pal[4],
'Overall' = '#000000'
),
labels = c(
'Medicaidᶜ',
'Medicare onlyᵃ',
'Private onlyᵃᶜ',
'Uninsuredᵃᶜ',
'Overallᵃᶜ'
)
) +
scale_linetype_manual(
name = 'Insurance',
labels = c(
'Medicaidᶜ',
'Medicare onlyᵃ',
'Private onlyᵃᶜ',
'Uninsuredᵃᶜ',
'Overallᵃᶜ'
),
values = c(
'Medicaid' = 'solid',
'Medicare only' = 'solid',
'Private only' = 'solid',
'Uninsured' = 'solid',
'Overall' = 'dashed'
)
)
test_plots_sans_2020[[3]]
test_plots_sans_2020[[3]] <-
test_plots_sans_2020[[3]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Insurance',
values = c(
'Medicaid' = color_pal[1],
'Medicare only' = color_pal[2],
'Private only' = color_pal[3],
'Uninsured' = color_pal[4],
'Overall' = '#000000'
)
) +
scale_linetype_manual(
name = 'Insurance',
values = c(
'Medicaid' = 'solid',
'Medicare only' = 'solid',
'Private only' = 'solid',
'Uninsured' = 'solid',
'Overall' = 'dashed'
)
)
test_plots_sans_2020[[3]]
stats_table_plot_dat_sans_2020$insurance %>% unique(.$strata)
unique(stats_table_plot_dat_sans_2020$insurance$strata)
color_pal
color_pal[4]
test_plots_sans_2020 <-
map2(
stats_table_plot_dat_sans_2020,
stats_table_2020_only,
~ ggplot(
filter(.x, variable %in% c('a1c', 'CHOL_all', 'flu')),
aes(
x = year,
y = p,
group = strata,
color = strata
)
) +
geom_line(aes(
x = year,
y = model,
group = strata,
color = strata,
linetype = strata
)) +
geom_line(
data = filter(
overall_data_sans_2020,
variable %in% c('a1c', 'CHOL_all', 'flu')
),
aes(
x = year,
y = model,
color = strata,
linetype = strata
),
) +
geom_jitter(
data = filter(.y, variable %in% c('a1c', 'CHOL_all', 'flu')) ,
aes(
x = year,
y = p,
group = strata,
color = strata
),
inherit.aes = FALSE,
width = 0.22,
height = 0.005
) +
geom_point(
data = filter(
overall_data,
variable %in% c('a1c', 'CHOL_all', 'flu'),
year == 2020
),
aes(x = year, y = p, color = strata),
inherit.aes = FALSE
) +
facet_wrap(~ variable_text, ncol = 3) +
theme_classic() +
scale_y_continuous(
limits = c(0, 100),
breaks = seq(0, 100, 25),
labels = seq(0, 100, 25)
) +
scale_x_continuous(
limits = c(2008, 2020.3),
breaks = seq(2008, 2020, 2),
labels = seq(2008, 2020, 2)
) +
theme(
axis.text = element_text(color = 'black'),
#axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95),
legend.title = element_text(size = 11),
legend.text = element_text(size = 9)
) +
labs(x = 'Year', y = 'Percentage')
)
test_plots_sans_2020[[1]] <-
test_plots_sans_2020[[1]] +
theme(axis.title.x = element_blank()) +
scale_color_manual(
name = 'Age (grouped)',
labels = c('18 to 44ᵃᶜ',
'45 to 64',
'65 to 74ᵃ',
'75+ᵃ',
'Overallᵃᶜ'),
values = c(color_pal[1:length(unique(stats_table_plot_dat_sans_2020$age$strata))], '#000000')
) +
scale_linetype_manual(
name = 'Age (grouped)',
labels = c('18 to 44ᵃᶜ',
'45 to 64',
'65 to 74ᵃ',
'75+ᵃ',
'Overallᵃᶜ'),
values = c(rep('solid', times = length(
unique(stats_table_plot_dat_sans_2020$age$strata)
)), 'dashed')
)
test_plots_sans_2020[[2]] <-
test_plots_sans_2020[[2]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Highest degree obtained',
labels = c('Greater than HSᵃᶜ',
'High schoolᵃᵇᶜ',
'Less than HSᶜ',
'Overallᵃᶜ'),
values = c(color_pal[1:length(unique(stats_table_plot_dat_sans_2020$edu$strata))], '#000000')
) +
scale_linetype_manual(
name = 'Highest degree obtained',
labels = c('Greater than HSᵃᶜ',
'High schoolᵃᵇᶜ',
'Less than HSᶜ',
'Overallᵃᶜ'),
values = c(rep('solid', times = length(
unique(stats_table_plot_dat_sans_2020$edu$strata)
)), 'dashed')
)
test_plots_sans_2020[[3]] <-
test_plots_sans_2020[[3]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Insurance',
values = c(
'Medicaid' = color_pal[1],
'Medicare only' = color_pal[2],
'Private only' = color_pal[3],
'Uninsured' = color_pal[4],
'Overall' = '#000000'
)
) +
scale_linetype_manual(
name = 'Insurance',
values = c(
'Medicaid' = 'solid',
'Medicare only' = 'solid',
'Private only' = 'solid',
'Uninsured' = 'solid',
'Overall' = 'dashed'
)
)
test_plots_sans_2020[[3]]
test_plots_sans_2020 <-
map2(
stats_table_plot_dat_sans_2020,
stats_table_2020_only,
~ ggplot(
filter(.x, variable %in% c('a1c', 'CHOL_all', 'flu')),
aes(
x = year,
y = p,
group = strata,
color = strata
)
) +
geom_line(aes(
x = year,
y = model,
group = strata,
color = strata,
linetype = strata
)) +
geom_line(
data = filter(
overall_data_sans_2020,
variable %in% c('a1c', 'CHOL_all', 'flu')
) %>%
mutate(strata = 'z'),
aes(
x = year,
y = model,
color = strata,
linetype = strata
),
) +
geom_jitter(
data = filter(.y, variable %in% c('a1c', 'CHOL_all', 'flu')) ,
aes(
x = year,
y = p,
group = strata,
color = strata
),
inherit.aes = FALSE,
width = 0.22,
height = 0.005
) +
geom_point(
data = filter(
overall_data,
variable %in% c('a1c', 'CHOL_all', 'flu'),
year == 2020
) %>%
mutate(strata = 'z'),
aes(x = year, y = p, color = strata),
inherit.aes = FALSE
) +
facet_wrap(~ variable_text, ncol = 3) +
theme_classic() +
scale_y_continuous(
limits = c(0, 100),
breaks = seq(0, 100, 25),
labels = seq(0, 100, 25)
) +
scale_x_continuous(
limits = c(2008, 2020.3),
breaks = seq(2008, 2020, 2),
labels = seq(2008, 2020, 2)
) +
theme(
axis.text = element_text(color = 'black'),
#axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95),
legend.title = element_text(size = 11),
legend.text = element_text(size = 9)
) +
labs(x = 'Year', y = 'Percentage')
)
test_plots_sans_2020[[3]] <-
test_plots_sans_2020[[3]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Insurance',
values = c(
'Medicaid' = color_pal[1],
'Medicare only' = color_pal[2],
'Private only' = color_pal[3],
'Uninsured' = color_pal[4],
'z' = '#000000'
)
) +
scale_linetype_manual(
name = 'Insurance',
values = c(
'Medicaid' = 'solid',
'Medicare only' = 'solid',
'Private only' = 'solid',
'Uninsured' = 'solid',
'z' = 'dashed'
)
)
test_plots_sans_2020[[3]]
test_plots_sans_2020[[3]] <-
test_plots_sans_2020[[3]] +
theme(
strip.background =  element_blank(),
strip.text = element_blank(),
axis.title.x = element_blank()
) +
scale_color_manual(
name = 'Insurance',
values = c(
'Medicaid' = color_pal[1],
'Medicare only' = color_pal[2],
'Private only' = color_pal[3],
'Uninsured' = color_pal[4],
'z' = '#000000'
),   labels = c(
'Medicaidᶜ',
'Medicare onlyᵃ',
'Private onlyᵃᶜ',
'Uninsuredᵃᶜ',
'Overallᵃᶜ'
),
) +
scale_linetype_manual(
name = 'Insurance',
values = c(
'Medicaid' = 'solid',
'Medicare only' = 'solid',
'Private only' = 'solid',
'Uninsured' = 'solid',
'z' = 'dashed'
),
labels = c(
'Medicaidᶜ',
'Medicare onlyᵃ',
'Private onlyᵃᶜ',
'Uninsuredᵃᶜ',
'Overallᵃᶜ'
),
)
test_plots_sans_2020[[3]]
chatgpt:::run_addin_ask_chatgpt()
chatgpt:::run_addin_ask_chatgpt()
usethis::edit_r_profile('project')
usethis::edit_r_profile('user')
