),
DSCKFT53 = as.factor(
case_when(
DSCKFT53 >= 1 ~ 'Within last year',
DSCKFT53 == 0 ~ 'No foot examinations in a year',
DSCKFT53 == -1 ~ 'Inapplicable',
DSCKFT53 == -7 ~ 'Refused',
DSCKFT53 == -8 ~ 'DK',
DSCKFT53 == -9 ~ 'Not ascertained'
)
)
) %>%
select(-DSEYE53) %>% # Remove the 2001 eye variable that we recoded
mutate(
across(
c(
starts_with('DS'),
CHOLCK53,
CHECK53,
FLUSHT53,
HIDEGYR,
HIDEG,
RACEX,
RACETHNX,
USBORN42
),
~ as.factor(.x)
)
)
# Recode factors to facilitate working with them
dat <- dat %>%
mutate(
across(
intersect(starts_with('DSEY'),
ends_with('53')),
~ recode_factor(
.x,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-1` = 'Inapplicable',
`1` = 'YES',
`2` = 'NO'
)
),
across(
intersect(starts_with('DSCH'),
ends_with('53')),
~ recode_factor(
.x,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-1` = 'Inapplicable',
`1` = 'Within last year',
`2` = 'NO'
)
),
across(
intersect(starts_with('DSFL'),
ends_with('53')),
~ recode_factor(
.x,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-1` = 'Inapplicable',
`1` = 'Within last year',
`2` = 'NO'
)
),
across(
intersect(starts_with('DSFT'),
ends_with('53')),
~ recode_factor(
.x,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-1` = 'Inapplicable',
`1` = 'Within last year',
`2` = 'NO'
)
),
across(
starts_with('DVTOT'),
~ as.factor(case_when(.x >= 1 ~ 1,
TRUE ~ 0)) %>%
recode_factor(`1` = 'Once a year',
`0` = 'Less than once a year')
),
across(
starts_with('HIDE'),
~ recode_factor(
.x,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-7` = 'Refused',
`1` = 'No Degree',
`2` = 'GED',
`3` = 'HS',
`4` = 'Bachelor',
`5` = 'Masters',
`6` = 'Doctorate',
`7` = 'Other',
`8` = 'Under 16, inapplicable'
) %>%
fct_collapse(
`Less than high school` = c('No Degree', 'GED', 'Under 16, inapplicable'),
`High school` = c('HS'),
`Greater than HS` = c('Bachelor', 'Masters', 'Doctorate', 'Other'),
`Not available` = c('Not ascertained', 'DK', 'Refused', '-1', '-15')
)
),
across(
c(RACEX, RACEV1X),
~ recode_factor(
.x,
`1` = 'White',
`2` = 'Black',
`3` = 'Amer Indian/Alaska Native',
`4` = 'Asian',
`5` = 'Native Hawiian/Pacific Islander',
`6` = 'Multiple races reported',
`-9` = 'Not ascertained',
`-8` = 'DK',
`-7` = 'Refused'
)
),
RACETHNX = recode_factor(
RACETHNX,
`1` = 'Hispanic',
`2` = 'Black/Not Hispanic',
`3` = 'Asian/Not Hispanic',
`4` = 'Other Race/Not Hispanic',
) %>% fct_expand('White/Not Hispanic'),
RACETHX = recode_factor(
RACETHX,
`1` = 'Hispanic',
`2` = 'White/Not Hispanic',
`3` = 'Black/Not Hispanic',
`4` = 'Asian/Not Hispanic',
`5` = 'Other Race/Not Hispanic',
),
USBORN42 = recode_factor(
USBORN42,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-7` = 'Refused',
`-1` = 'Inapplicable',
`1` = 'Yes',
`2` = 'No'
),
BORNUSA = recode_factor(
BORNUSA,
`-15` = 'Cannot be computed',
`-9` = 'Not ascertained',
`-8` = 'DK',
`-7` = 'Refused',
`-1` = 'Inapplicable',
`1` = 'Yes',
`2` = 'No'
),
across(
c(CHOLCK53, CHECK53, FLUSHT53),
~ recode_factor(
.x,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-7` = 'Refused',
`-1` = 'Inapplicable',
`1` = 'Within last year',
`2` = 'Within past 2 years',
`3` = 'Within past 3 years',
`4` = 'Within past 5 years',
`5` = 'More than 5 years',
`6` = 'Never'
) %>%
fct_collapse(
`Within last 2 more more years` = c(
'Within past 2 years',
'Within past 3 years',
'Within past 5 years',
'More than 5 years',
'Never'
),
`Not available` = c(
'Not ascertained',
'DK',
'Refused',
'Inapplicable'
)
)
),
DENTCK53 = recode_factor(
DENTCK53,
`-9` = 'Not ascertained',
`-8` = 'DK',
`-7` = 'Refused',
`-1` = 'Inapplicable',
`1` = 'Twice a year or more',
`2` = 'Once a year',
`3` = 'Less than once a year',
`4` = 'Never go to dentist'
),
SEX = recode_factor(SEX,
`1` = 'Male',
`2` = 'Female')
)
dat$RACETHNX[dat$RACEX == 'White'] <- 'White/Not Hispanic'
# Need to coalesce the eye exam columns into a single column for a Y/N eye exam
# Chunk 3
# Three columns denote the DIAB diagnosis based on different years. I coalesce them
# to create a single column, which we can then filter on.
# Coding appears the same for all variables. 1 is diagnosed with diabetes, 2 is not. Other numbers
# are variations on missing or non-response
dat$DIABDX_all <- coalesce(dat$DIABDX53, dat$DIABDX_M18) # When using full data, add dat$DIABDX_M18,
# Variable to coallesce
# HIDEGYR/HIDEG
# POVCAT
# DIABW variables
dat <- dat %>%
mutate(
DSEY_all = coalesce(!!!select(., starts_with('DSEY'))),
HIDEG_all = coalesce(!!!select(., starts_with('HIDEG'))),
DIABW = coalesce(!!!select(., starts_with('DIABW'))),
POVCAT_all = coalesce(!!!select(., starts_with('POVCAT'))),
USBORN_all = coalesce(!!!select(., contains('BORN'))),
VARPSU_all = coalesce(!!!select(., starts_with('VARPSU'))),
VARSTR_all = coalesce(!!!select(., starts_with('VARSTR'))),
AGE_all = coalesce(!!!select(., starts_with('AGE'))),
RACE_all = coalesce(!!!select(., RACETHNX, RACETHX)),
CHOL_all = coalesce(!!!select(., CHOLCK53, starts_with('DSCH'))),
FLU_all = coalesce(!!!select(., FLUSHT53, starts_with('DSFL'))),
DENT_all = coalesce(!!!select(., DENTCK53, num_range('DVTOT', 17:20))),
FEET_all = coalesce(!!!select(., DSCKFT53, starts_with('DSFT'))),
) %>%
mutate(
AGE_all = as.factor(case_when(
AGE_all == -1 ~ NA_character_,
AGE_all < 18 & AGE_all > -1 ~ NA_character_,
AGE_all >= 18 & AGE_all <= 44 ~ '18 to 44',
AGE_all >= 45 & AGE_all <= 64 ~ '45 to 64',
AGE_all >= 65 & AGE_all <= 74 ~ '65 to 74',
AGE_all >= 75 ~ '75+',
TRUE ~ as.character(AGE_all)
))
)
# Get just data for people with diabetes
# Get just the variables I want
diab_dat <- dat %>%
select(year, DUPERSID, SEX, DIABW, ends_with('_all'),
CHOLCK53, FLUSHT53, CHECK53, DENTCK53, DSA1C53, DSCKFT53)
# Chunk 4
library(sitrep)
library(gtsummary)
library(srvyr)
diab_list <- group_split(diab_dat, year)
diab_svy <- diab_list[[17]] %>%
as_survey_design(ids = VARPSU_all, weights = DIABW, strata = VARSTR_all, nest = TRUE)
diab_only <- subset(diab_svy, DIABW != 0)
#svytable(~SEX, design = diab_only)
#test <-svytable(~CHOLCK53 + USBORN_all, design = diab_only, Ntotal = 100)
test <- diab_svy %>%
tab_survey(
#CHOL_all,
#FLU_all,
#DENT_all,
#DSA1C53,
DSEY_all,
#FEET_all,
pretty = FALSE,
strata = 'AGE_all',
wide = FALSE,
method = 'mean',
#drop = c('Not ascertained', 'DK', 'Refused', 'Inapplicable'),
keep = c(
'Within last year',
'2 or more A1C tests in a year',
'1 or more foot examinations in a year',
'Once a year',
#Dental checkups
'YES' # eye exam
)
)
race_df <- compact(race) %>%
bind_rows(.)
sex_df <- compact(sex) %>%
bind_rows(.)
edu_df <- compact(edu) %>%
bind_rows(.)
overall_df <- compact(overall) %>%
bind_rows(.)
ggplot(race_df, aes(x = year, y = proportion, group = RACE_all, colour = RACE_all)) +
geom_line() +
facet_wrap(~variable)
ggplot(sex_df, aes(x = year, y = proportion, group = SEX, colour = SEX)) +
geom_line() +
facet_wrap(~variable)
ggplot(edu_df, aes(x = year, y = proportion, group = HIDEG_all, colour = HIDEG_all)) +
geom_line() +
facet_wrap(~variable)
ggplot(overall_df, aes(x = year, y = proportion)) +
geom_line() +
facet_wrap(~variable)
ggplot(overall_df, aes(x = year, y = proportion)) +
geom_line() +
facet_wrap(~variable)
View(overall_df)
ggplot(overall_df, aes(x = year, y = proportion, color = value)) +
geom_line() +
facet_wrap(~variable)
plotTrends <- function(data, strata) {
if (is.null(strata) == TRUE) {
# data %>%
#   dplyr::filter(variable %in% c('a1c', 'eye-exam', 'flu', 'foot')) %>%
#   ggplot() +
#   geom_line(aes(
#     x = year,
#     y = proportion,
#     group = variable,
#     linetype = 'MEPS'
#   )) +
#   geom_line(aes(
#     x = year,
#     y = percentage,
#     group = variable,
#     linetype = 'Dashboard'
#   )) +
#   facet_wrap(~ variable) +
#   theme_bw()
} else {
data %>%
dplyr::filter(variable %in% c('a1c', 'eye-exam', 'flu', 'foot'),
value %in% c(
'Within last year',
'2 or more A1C tests in a year',
'1 or more foot examinations in a year',
'Once a year',
#Dental checkups
'YES' # eye exam
)) %>%
ggplot(.) +
geom_line(aes(
x = year,
y = proportion,
group = .data[[strata]],
color = .data[[strata]],
linetype = 'MEPS'
)) +
geom_line(aes(
x = year,
y = percentage,
group = .data[[strata]],
color = .data[[strata]],
linetype = 'Dashboard'
)) +
facet_wrap(~ variable) +
scale_linetype_manual(labels = c('Dashboard', 'MEPS'),
values = c('solid', 'dashed')) +
theme_bw()
}
}
plotTrends(sex_indicator, strata = "SEX")
plotTrends(sex_indicator, strata = "RACE")
plotTrends(sex_indicator, strata = "RACE_all")
plotTrends(race_indicator, strata = "RACE_all")
plotTrends <- function(data, strata) {
if (is.null(strata) == TRUE) {
data %>%
dplyr::filter(variable %in% c('a1c', 'eye-exam', 'flu', 'foot'),
value %in% c(
'Within last year',
'2 or more A1C tests in a year',
'1 or more foot examinations in a year',
'Once a year',
#Dental checkups
'YES' # eye exam
)) %>%
ggplot() +
geom_line(aes(
x = year,
y = proportion,
group = variable,
linetype = 'MEPS'
)) +
geom_line(aes(
x = year,
y = percentage,
group = variable,
linetype = 'Dashboard'
)) +
facet_wrap(~ variable) +
theme_bw()
} else {
data %>%
dplyr::filter(variable %in% c('a1c', 'eye-exam', 'flu', 'foot'),
value %in% c(
'Within last year',
'2 or more A1C tests in a year',
'1 or more foot examinations in a year',
'Once a year',
#Dental checkups
'YES' # eye exam
)) %>%
ggplot(.) +
geom_line(aes(
x = year,
y = proportion,
group = .data[[strata]],
color = .data[[strata]],
linetype = 'MEPS'
)) +
geom_line(aes(
x = year,
y = percentage,
group = .data[[strata]],
color = .data[[strata]],
linetype = 'Dashboard'
)) +
facet_wrap(~ variable) +
scale_linetype_manual(labels = c('Dashboard', 'MEPS'),
values = c('solid', 'dashed')) +
theme_bw()
}
}
plotTrends(overall_df, strata = NULL)
plotTrends(overall_indicator, strata = NULL)
plotTrends <- function(data, strata) {
if (is.null(strata) == TRUE) {
data %>%
dplyr::filter(variable %in% c('a1c', 'eye-exam', 'flu', 'foot'),
value %in% c(
'Within last year',
'2 or more A1C tests in a year',
'1 or more foot examinations in a year',
'Once a year',
#Dental checkups
'YES' # eye exam
)) %>%
ggplot() +
geom_line(aes(
x = year,
y = proportion,
group = variable,
linetype = 'MEPS'
)) +
geom_line(aes(
x = year,
y = percentage,
group = variable,
linetype = 'Dashboard'
)) +
facet_wrap(~ variable) +
theme_bw()
} else {
data %>%
dplyr::filter(variable %in% c('a1c', 'eye-exam', 'flu', 'foot'),
value %in% c(
'Within last year',
'2 or more A1C tests in a year',
'1 or more foot examinations in a year',
'Once a year',
#Dental checkups
'YES' # eye exam
)) %>%
ggplot(.) +
geom_line(aes(
x = year,
y = proportion,
group = .data[[strata]],
color = .data[[strata]],
linetype = 'MEPS'
)) +
geom_line(aes(
x = year,
y = percentage,
group = .data[[strata]],
color = .data[[strata]],
linetype = 'Dashboard'
)) +
facet_wrap(~ variable) +
scale_linetype_manual(labels = c('Dashboard', 'MEPS'),
values = c('solid', 'dashed')) +
theme_bw()
}
}
tar_make()
tar_visnetwork()
tar_load(ends_with('trend'))
sex_trend
overall_trend
race_trend
edu_trend
overall_trend
View(overall_indicator)
tar_visnetwork
tar_visnetwork()
tar_visnetwork()
tar_visnetwork()
tar_load(cleaned_dat)
tar_load(diab_dat)
job::job({tar_make_future(workers = 4); textme()})
?job::job
job::job({tar_make_future(workers = 4); textme()}, import = NULL)
?`gtsummary-package`
?gtsummary
diab_list <- group_split(diab_dat, year)
diab_svy <- diab_list[[17]] %>%
as_survey_design(ids = VARPSU_all, weights = DIABW, strata = VARSTR_all, nest = TRUE)
diab_only <- subset(diab_svy, DIABW != 0)
diab_svy
tbl_svysummary(diab_svy)
tbl_svysummary(diab_svy, include = DSA1C53)
tbl_svysummary(diab_svy, include = c(DSA1C53, FLU_all, DENT_all, FEET_all, DSEY_all))
tbl_svysummary(diab_svy, include = c(DSEY_all), by = year)
