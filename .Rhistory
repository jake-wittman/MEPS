<<<<<<< HEAD
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
summary(jp2)
cat(jp2)
cat(jp2$run_summary)
summary(jp2)
run_opt = run_options(
model = "ln",
max_joinpoints = 2,
n_cores = 3,
min_obs_end = 1,
min_obs_between = 1,
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
select(stats_table_plot_dat$`age.a1c.18 to 44`, year, p_100),
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
summary(jp2)
?joinpoint
?run_options
run_opt = run_options(
model = "ln",
max_joinpoints = 2,
n_cores = 3,
min_obs_end = 1,
min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
select(stats_table_plot_dat$`age.a1c.18 to 44`, year, p_100),
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
summary(jp2)
jp2$selected_model
jp2
jp2$selected_model
jp2$apc
run_opt = run_options(
model = "linear",
max_joinpoints = 2,
n_cores = 3,
min_obs_end = 1,
min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
select(stats_table_plot_dat$`age.a1c.18 to 44`, year, p_100),
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$selected_model
jp2$apc
jp2 = joinpoint(
stats_table_plot_dat$`age.a1c.18 to 44`,
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2$apc
jp2$selected_model
run_opt = run_options(
model = "linear",
max_joinpoints = 3,
n_cores = 3,
min_obs_end = 1,
min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$`age.a1c.18 to 44`,
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
run_opt = run_options(
model = "ln",
max_joinpoints = 3,
n_cores = 3,
min_obs_end = 1,
min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$`age.a1c.18 to 44`,
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
run_opt = run_options(
model = "ln",
min_joinpoints = 2,
max_joinpoints = 3,
n_cores = 3,
min_obs_end = 1,
min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$`age.a1c.18 to 44`,
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 2,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$`age.a1c.18 to 44`,
x = year,
y = p_100,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp_plot(jp2)
stats_table_plot_dat <- age_adjusted_stats %>%
filter(strata != 'Total') %>%
filter(strata != 'Not available') %>%
filter(strata != 'Other Race/Not Hispanic') %>%
mutate(variable_text = case_when(variable == 'a1c' ~ '2 or more A1C tests',
variable == 'CHOL_all' ~ 'Cholesterol tested',
variable == 'DENT_all' ~ '1 or more dentist visits',
variable == 'eye-exam' ~ 'Eye exam with dilation',
variable == 'flu' ~ 'Received flu vaccine',
variable == 'foot' ~ 'Foot examination'),
strata = case_when(strata == 'stat_0' ~ 'Overall',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata),
p_100 = p / 100) %>%
split(., f = ~.$stratifier + .$variable)
run_opt = run_options(
model = "ln",
min_joinpoints = 2,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$age.a1c,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 1,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$age.a1c,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 1,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 0,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 0,
max_joinpoints = 1,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 0,
max_joinpoints = 0,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 3,
max_joinpoints = 5,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
run_opt = run_options(
model = "ln",
min_joinpoints = 1,
max_joinpoints = 5,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
run_opt = run_options(
model = "ln",
min_joinpoints = 0,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "ln",
min_joinpoints = 0,
max_joinpoints = 4,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
run_opt = run_options(
model = "linear",
min_joinpoints = 0,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
summary(jp2)
jp_plot(jp2)
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
jp2$selected_model
jp2$perm_test
run_opt = run_options(
model = "ln",
min_joinpoints = 0,
max_joinpoints = 3,
n_cores = 3,
# min_obs_end = 1,
# min_obs_between = 1,
het_error = 'constant variance',
dependent_variable_type = 'proportion'
)
export_opt = export_options()
jp2 = joinpoint(
stats_table_plot_dat$insurance.CHOL_all,
x = year,
y = p_100,
by = strata,
verbose = F,
run_opts = run_opt,
export_opts = export_opt,
se = NULL,
dir = 'temp'
)
jp2
jp2$apc
=======
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1) #%>%
?fct_relevel
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, 'High Income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1) #%>%
warnings()
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100,
strata = as.factor(strata)) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, 'High Income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1) #%>%
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata))
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, 'High Income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1) #%>%
warnings()
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, "-",
'18 to 44', '45 to 64', '65 to 74', '75+',
'Greater than high school', 'High school', 'Less than high school',
'Asian/Not Hispanic', 'Black/Not Hispanic', 'Hispanic', 'White/Not Hispanic',
'Female', 'Male',
'Any private', 'Public only', 'Uninsured',
'High Income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1) #%>%
warnings()
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, "-",
'18 to 44', '45 to 64', '65 to 74', '75+',
'Greater than high school', 'High school', 'Less than high school',
'Asian/Not Hispanic', 'Black/Not Hispanic', 'Hispanic', 'White/Not Hispanic',
'Female', 'Male',
'Any private', 'Public only', 'Uninsured',
'High income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1) #%>%
?fct_relevel
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, "-",
'18 to 44', '45 to 64', '65 to 74', '75+',
'Greater than high school', 'High school', 'Less than high school',
'Asian/Not Hispanic', 'Black/Not Hispanic', 'Hispanic', 'White/Not Hispanic',
'Female', 'Male',
'Any private', 'Public only', 'Uninsured',
'High income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 2) #%>%
age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
),
strata = fct_relevel(strata, "-",
'18 to 44', '45 to 64', '65 to 74', '75+',
'Greater than high school', 'High school', 'Less than high school',
'Asian/Not Hispanic', 'Black/Not Hispanic', 'Hispanic', 'White/Not Hispanic',
'Female', 'Male',
'Any private', 'Public only', 'Uninsured',
'High income', 'Middle income', 'Low income', 'Poor/Negative')) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 2) -> v#%>%
str(v)
v$_data
v$`_data`
v$`_data` %>% View()
v$`_data` <- v$`_data`[c(1:18, 20, 19, 21), ]
v
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 2)
tar_load(age_adjusted_preventive)
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 2)
preventive_practice_table$`_data` <- preventive_practice_table$`_data`[c(1:18, 20, 19, 21), ]
preventive_practice_table %>%
gtsave('preventive_practices.docx')
tar_load(age_adjusted_preventive)
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'Three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Total',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1)
preventive_practice_table$`_data` <- preventive_practice_table$`_data`[c(1:18, 20, 19, 21), ]
preventive_practice_table %>%
gtsave('preventive_practices.docx')
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'At least three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1)
preventive_practice_table
tar_load(age_adjusted_preventive)
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'At least three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1)
preventive_practice_table$`_data` <- preventive_practice_table$`_data`[c(1:18, 20, 19, 21), ]
preventive_practice_table %>%
gtsave('preventive_practices.docx')
tar_load(age_adjusted_preventive)
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'At least three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1)
preventive_practice_table$`_data` <- preventive_practice_table$`_data`[c(1:18, 20, 19, 21), ]
preventive_practice_table %>%
gtsave('preventive_practices.docx')
source("C:/R_Rstudio/Projects/MEPS/scripts/functions.R")
job::job({targets::tar_make(age_adjusted_preventive)})
tar_load(age_adjusted_preventive)
preventive_practice_table <- age_adjusted_preventive %>%
filter(label == 'At least three preventive practices followed') %>%
mutate(age_adjusted_prop = age_adjusted_prop * 100) %>%
pivot_wider(
id_cols = c(stratifier, variable, label, strata),
names_from = year,
values_from = age_adjusted_prop
) %>%
filter(strata %!in% c('Not available', 'Other Race/Not Hispanic')) %>%
mutate(stratifier = factor(stratifier,
c('overall', 'age', 'sex', 'race', 'edu', 'insurance', 'poverty')),
strata = case_when(strata == 'stat_0' ~ '-',
strata == 'Greater than HS' ~ 'Greater than high school',
TRUE ~ strata)) %>%
mutate(strata = as.factor(strata)) %>%
mutate(stratifier = recode_factor(
stratifier,
overall = 'Overall',
age = 'Age',
sex = 'Sex',
race = 'Race/Ethnicity',
edu = 'Highest degree earned',
insurance = 'Insurance coverage',
poverty = 'Poverty level'
)) %>%
group_by(stratifier) %>%
select(stratifier, strata, `2008`:`2020`) %>%
gt() %>%
fmt_number(columns = `2008`:`2020`, decimals = 1)
preventive_practice_table$`_data` <- preventive_practice_table$`_data`[c(1:18, 20, 19, 21), ]
preventive_practice_table
renv::restore()
library(targets)
tar_visnetwork()
tar_visnetwork90
tar_visnetwork()
tar_make_clustermq(c(age_adjusted_preventive, stats_table), workers = 28)
renv::install('clustermq')
sessionInfo()
renv::install('future')
renv::install('future.callr')
tar_make_future(c(age_adjusted_preventive, stats_table), workers = 28)
tar_make_future(c(age_adjusted_preventive, stats_table), workers = 14)
renv::install('arrow')
tar_make_future(c(age_adjusted_preventive, stats_table), workers = 14)
warnings()
tar_make_future( workers = 20)
>>>>>>> 6133ff41b815d661439ea542d6d94721d7eca551
